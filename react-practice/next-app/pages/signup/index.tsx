import { Button, Paper, TextField, Typography } from "@mui/material";
import { NextPage } from "next";
import { isValidEmail, isValidPassword } from "../../utils/validator";
import { useSnackBar } from "../../hooks/useSnackBar";
import { useState } from "react";
import { useRouter } from "next/router";
import Image from "next/image";
import ChatIcon from "../../public/chat.svg";
import Link from "next/link";
import Head from "next/head";

const SignupPage: NextPage = () => {
  const [email, setEmail] = useState<string>("");
  const [name, setName] = useState<string>("");
  const [confirmPassword, setConfirmPassword] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const { snackbarInjector } = useSnackBar();
  const router = useRouter();

  const handleSubmit = (): void => {
    if (
      email === "" ||
      password === "" ||
      name === "" ||
      confirmPassword === ""
    ) {
      snackbarInjector("one or more fields are empty!!!", "error");
    } else {
      if (password === confirmPassword) {
        let validateEmail = isValidEmail(email);
        let validatePassword = isValidPassword(password);

        if (!validateEmail) {
          snackbarInjector("please provide valid email", "error");
        }
        if (!validatePassword) {
          snackbarInjector(
            "password should be minimum of 8 chars, and should include special char,number and uppercase letter",
            "error"
          );
        }
        if (validateEmail && validatePassword) {
          snackbarInjector("signup successful", "success");
          router.push("/login");
        }
      } else {
        snackbarInjector(
          "please enter same password in confirm password",
          "error"
        );
      }
    }
  };

  return (
    <div className="page-container">
      <Head>
        <title>Chat App | Signup</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="./chat.svg" />
      </Head>
      <Paper
        elevation={7}
        sx={{
          minWidth: 500,
          padding: 2,
          minHeight: 450,
          display: "flex",
          flexDirection: "column",
          justifyContent: "space-between",
        }}
      >
        <Image src={ChatIcon} alt="logo-icon" width={60} height={60} />

        <TextField
          type={"text"}
          label="Enter Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          size="small"
          color="primary"
        />

        <TextField
          type={"email"}
          label="Enter Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          size="small"
          color="primary"
        />
        <TextField
          type="password"
          label="Enter Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          size="small"
          color="primary"
        />
        <TextField
          type="password"
          label="Enter Password Again"
          value={confirmPassword}
          onChange={(e) => setConfirmPassword(e.target.value)}
          size="small"
          color="primary"
        />
        <Typography color="primary" sx={{ textDecoration: "underline" }}>
          <Link href={"/login"}>Already have accont? login here</Link>
        </Typography>
        <Button onClick={handleSubmit} color="primary" variant="contained">
          sign up
        </Button>
      </Paper>
    </div>
  );
};

export default SignupPage;
